import safeGet from 'just-safe-get'
import helper from './helper'

$ const model = helper.getModelData(state);
<if(model.showEmptyScreen)>
    <div.sold-empty>
        <static-text class="sold-empty__header" model=model.emptyMessage/>
        <static-text class="sold-empty__link" model=model.startListingLink/>
    </div>
</if>
<if(!model.showEmptyScreen && model.items && model.items.length > 0)>
    <layout-item-listing class="sold-page__list" title=model.title qaId=safeGet(model, 'items.0.orderId')>
        <@items>
            <div class="item-list" >
                <for|i| from=0 to=(model.items.length - 1)>
                    $ const order = model.items[i];
                    $ const isChecked = input.selectedIdList.indexOf(order[0].header.orderId) >= 0;
                    <div class="sold-itemcard" key=`itemCard-${i}` qaId=safeGet(order, '0.orderId')>
                        <for|j| from=0 to=(order.length - 1)>
                            $ const item = order[j]
                            <item-header
                                key=`itemHeader-${j}`
                                model=item.header
                                isChecked=isChecked
                                on-soldPageUpdate("emit", "soldPageUpdate")
                                on-show-loader("emit", "show-loader")
                                on-button-click("handleItemActionButtonClick")
                                is-edit-mode=input.isEditMode
                                on-checkbox-change("emit", "checkbox-change")/>
                            <item-content
                                key=`itemContent-${j}`
                                model=item.body
                                isChecked=isChecked
                                addNoteContentMap=model.addNoteContentMap
                                accessibilityContent=model.accessibilityContent
                                on-showTrackingDetails("showTrackingDetails")
                                on-soldPageUpdate("emit", "soldPageUpdate")
                                on-show-loader("emit", "show-loader")
                                is-edit-mode=input.isEditMode
                                on-onAddNote("onAddNote")
                                on-checkbox-change("emit", "checkbox-change")/>
                        </for>
                    </div>
                </for>
            </div>
        </@items>
    </layout-item-listing>
</if>
<div class="sold-page__legaltext">
    <me-textual-display model=model.shipToFundLegalText/>
</div>
<tracking-details key="tracking-details"/>
<if(model.pagination)>
    <me-pagination
        model=model.pagination
        class="sold-page__pagination"
        eventDelegate="soldPageUpdate"
        on-soldPageUpdate("emit", "soldPageUpdate")
        key="sold-pagination"/>
</if>
<me-user-add-note
    key="addNoteModal"
    content-map=model.addNoteContentMap
    spa-command=model.spaCommand
    on-addNote("emit", "soldPageUpdate")/>
