import safeGet from 'just-safe-get'

$ const overViewModel = state.model;
$ const csrfTokenModule = safeGet(state.model, 'modules.csrfTokenModule');
$ const myebayPageContent = safeGet(input, "model.data.modules.i18nModule");
$ const busyLabel = safeGet(myebayPageContent, "busyLabel");
$ {
    const timeout =
        (safeGet(input, "model.data.modules.warmup") && 60000) ||
        safeGet(input, "modules.configModule.awaitTimeout");
}
<app-shell model=overViewModel key="meuiAppShell">
    <div id="meb-items-cnt" class="app-overview">
        <!-- page right container title -->
        <me-spinner label=busyLabel/>
        <await-ebay(welcomeScreenModule from overViewModel.modules.welcomeScreenModule) timeout=timeout>
            <await-error-ebay/>
            $ overViewModel.modules.welcomeScreenModule = welcomeScreenModule;
            <me-welcome-screen model=welcomeScreenModule/>
        </await-ebay>
        <await-ebay(model from overViewModel.modules.errorStateModule) timeout=timeout>
            <await-timeout-ebay>
                <meui-module-error/>
            </await-timeout-ebay>
            <await-error-ebay>
                <meui-module-error/>
            </await-error-ebay>
            <if(model && model.errorMessage)>
                <meui-module-error errorMessage=model.errorMessage/>
                $ overViewModel.modules.errorStateModule = model;
            </if>
        </await-ebay>
        <await-ebay(model from overViewModel.modules.kycAlertsModule) timeout=timeout>
            <await-timeout-ebay>
                <!-- kycAlertModule timeout -->
            </await-timeout-ebay>
            <await-error-ebay>
                 <!-- kycAlertModule error -->
            </await-error-ebay>
            <me-kyc-notice model=model />
            $ overViewModel.modules.kycAlertsModule = model;
        </await-ebay>
        <if(overViewModel.modules.managedPaymentsModule)>
            <await-ebay(model from overViewModel.modules.managedPaymentsModule) timeout=timeout>
                <await-timeout-ebay/>
                <await-error-ebay/>
                <if(overViewModel.modules.managedPaymentsModule.requiredParticipationStatus === "SOFT_REQUIRED")>
                    <managed-payments usecase="SOFT_REQUIRED" model=model/>
                </if>
                <else-if(overViewModel.modules.managedPaymentsModule.requiredParticipationStatus === "HARD_REQUIRED")>
                    <managed-payments usecase="HARD_REQUIRED" model=model/>
                </else-if>
                <else>
                    <await-ebay(model from overViewModel.modules.managedPaymentsModule) timeout=timeout>
                        <await-timeout-ebay/>
                        <await-error-ebay/>
                        <managed-payments model=model/>
                        $ overViewModel.modules.managedPaymentsModule = model;
                    </await-ebay>
                </else>
                $ overViewModel.modules.managedPaymentsModule = model;
            </await-ebay>
        </if>
        <await-ebay(model from overViewModel.modules.vacationSettingsModule) timeout=timeout>
        <await-timeout-ebay>
            <!-- Time off alert Module timeout -->
        </await-timeout-ebay>
        <await-error-ebay>
            <!-- Time off Alert Module error -->
        </await-error-ebay>
        <me-timeoff-alerts model=model />
        $ overViewModel.modules.vacationSettingsModule = model;
    </await-ebay>
    <if(overViewModel.modules.managedPaymentsModule)>
        <if(overViewModel.modules.managedPaymentsModule.requiredParticipationStatus === "HARD_REQUIRED")>
            <await-ebay(model from overViewModel.modules.listItemModule) timeout=timeout>
                <await-timeout-ebay/>
                <await-error-ebay/>
                <meui-list-it usecase="HARD_REQUIRED" model=model/>
                $ overViewModel.modules.listItemModule = model;
            </await-ebay>
        </if>
        <else>
            <await-ebay(model from overViewModel.modules.listItemModule) timeout=timeout>
                <await-timeout-ebay/>
                <await-error-ebay/>
                <meui-list-it model=model/>
                $ overViewModel.modules.listItemModule = model;
            </await-ebay>
        </else>
    </if>
    <else>
        <await-ebay(model from overViewModel.modules.listItemModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <meui-list-it model=model/>
            $ overViewModel.modules.listItemModule = model;
        </await-ebay>
    </else>
        <await-ebay(model from overViewModel.modules.sellingActivityModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <meui-selling-activity
                model=model
                on-appUpdate("onAppUpdate")
                geo=overViewModel.modules.geo/>
            $ overViewModel.modules.sellingActivityModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.sellerOnboardingModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <meui-onboarding
                model=model
                on-appUpdate("onAppUpdate")
            />
            $ overViewModel.modules.sellerOnboardingModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.emptyStateModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <meui-empty model=model key="emptyStatus"/>
            $ overViewModel.modules.emptyStateModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.todoListModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <todos-list model=model on-appUpdate("onAppUpdate")/>
            $ overViewModel.modules.todoListModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.outbackLotsModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <meui-generate-drafts
                myebayPageContent=myebayPageContent
                key="generateDrafts"
                on-openProgressIndicator("openProgressIndicator")
                model=model
                on-appUpdate("onAppUpdate")/>
            $ overViewModel.modules.outbackLotsModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.outbackProcessingMessageModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <meui-progress-indicator
                myebayPageContent=myebayPageContent
                key="progressPopup"
                csrfToken=csrfTokenModule
                on-refreshOutbackModule("refreshOutbackModule")
                model=model/>
            $ overViewModel.modules.outbackProcessingMessageModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.madronaAdsModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <me-madrona model=model mweb="true"/>
            $ overViewModel.modules.madronaAdsModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.finishItModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <overview-finish-it model=model on-appUpdate("onAppUpdate")/>
            $ overViewModel.modules.finishItModule = model;
        </await-ebay>
        <await-ebay(model from overViewModel.modules.sellingLimitEnforcementModule) timeout=timeout>
            <await-timeout-ebay/>
            <await-error-ebay/>
            <me-selling-limits model=model/>
            $ overViewModel.modules.sellingLimitEnforcementModule = model;
        </await-ebay>
    </div>
</app-shell>
